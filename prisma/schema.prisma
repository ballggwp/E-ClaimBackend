// prisma/schema.prisma

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

enum ClaimStatus {
  DRAFT
  PENDING_INSURER_REVIEW
  AWAITING_EVIDENCE
  PENDING_INSURER_FORM
  PENDING_MANAGER_REVIEW
  PENDING_USER_CONFIRM
  AWAITING_SIGNATURES
  COMPLETED
  REJECTED
}

enum AttachmentType {
  DAMAGE_IMAGE
  ESTIMATE_DOC
  OTHER_DOCUMENT
}

enum Fppa04ItemCategory {
  COMPENSATION
  DEDUCTION
}

enum Role {
  USER
  MANAGER
  INSURANCE
}

model User {
  id            String   @id @default(uuid())
  email         String   @unique
  name          String
  password      String
  role          Role     @default(USER)
  position      String?  // all roles can have a position
  
  // one-to-many: users → claims they created
  claimsCreated Claim[]  @relation("ClaimsCreated")
  
  // one-to-many: users → claims they must approve
  claimsToSign  Claim[]  @relation("ClaimsApprover")
  
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model Claim {
  id               String       @id @default(cuid())
  createdByName    String
  approverName     String
  // references the user who filed it
  createdById      String
  createdBy        User         @relation("ClaimsCreated", fields: [createdById], references: [id])

  // references the user who must approve it
  approverId       String
  approver         User         @relation("ClaimsApprover", fields: [approverId], references: [id])

  status           ClaimStatus  @default(DRAFT)
  insurerComment   String?
  submittedAt      DateTime?

  accidentDate     DateTime
  accidentTime     String
  location         String
  cause            String

  policeDate       DateTime?
  policeTime       String?
  policeStation    String?

  damageOwnType    String
  damageOtherOwn   String?
  damageAmount     Float?
  damageDetail     String?
  victimDetail     String?

  partnerName         String?
  partnerPhone        String?
  partnerLocation     String?
  partnerDamageDetail String?
  partnerDamageAmount Float?
  partnerVictimDetail String?

  // attachments (1-M)
  attachments     Attachment[] @relation("ClaimAttachments")

  // optional 1-1 FPPA-04 form
  fppa04          Fppa04?

  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt
}

model Attachment {
  id         String         @id @default(cuid())
  claimId    String
  claim      Claim          @relation("ClaimAttachments", fields: [claimId], references: [id])
  type       AttachmentType
  fileName   String
  url        String
  uploadedAt DateTime       @default(now())
}

model Fppa04 {
  id                  String                @id @default(cuid())
  claimId             String                @unique
  claim               Claim                 @relation(fields: [claimId], references: [id])

  eventType           String                // ประเภทกรมธรรม์
  claimRefNumber      String                // หมายเลขรับ Claim
  eventDescription    String                // เหตุการณ์
  productionYear      Int                   // ปีรถที่ผลิต
  accidentDate        DateTime              // วันที่เกิดเหตุ
  reportedDate        DateTime              // วันที่รับแจ้ง
  receivedDocDate     DateTime              // วันที่ได้รับเอกสาร
  company             String                // บริษัท
  factory             String                // โรงงาน
  policyNumber        String                // เลขที่กรมธรรม์
  surveyorRefNumber   String                // เลขที่ Claim Surveyor

  items               Fppa04Item[]          @relation("Fppa04Items")
  adjustments         Fppa04Adjustment[]    @relation("Fppa04Adjustments")
  signatureFiles      String[]              // เก็บเป็น array ของ URL

  createdAt           DateTime              @default(now())
  updatedAt           DateTime              @updatedAt
}

model Fppa04Item {
  id          String  @id @default(cuid())
  fppa04Id    String
  fppa04      Fppa04  @relation("Fppa04Items", fields: [fppa04Id], references: [id])
  category    String
  description String
  total       Float
  exception   Float
}

model Fppa04Adjustment {
  id          String  @id @default(cuid())
  fppa04Id    String
  fppa04      Fppa04  @relation("Fppa04Adjustments", fields: [fppa04Id], references: [id])
  type        String  // "บวก" หรือ "หัก"
  description String
  amount      Float
}